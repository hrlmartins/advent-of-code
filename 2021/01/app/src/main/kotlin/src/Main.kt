/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package src

fun main() {
    val measurements = generateSequence(::readLine).toList().map { it.toInt() }
    println("Sonar increases amount to: ${solveP2(
            measurements,
            measurements.slice(0..0).sum(),
            0,
            0
            
    )}")
    println("Sonar complex increases amount to: ${solveP2(
            measurements,
            measurements.slice(0..2).sum(),
            0,
            2
    )}")
}

fun solveP2(measurements: List<Int>, previous: Int, startIdx: Int, endIdx: Int): Int {
    if (endIdx >= measurements.size) return 0

    val currentSum = measurements.slice(startIdx..endIdx).sum()
    val factor = if (currentSum > previous) 1 else 0
    return factor + solveP2(measurements, currentSum, startIdx + 1, endIdx + 1)
}
